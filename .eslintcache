[{"C:\\Mahyar\\LUT_Software_Engineering_MSc\\Courses_Autumn_2020\\Geographic_Information_Systems\\WebGIS\\geo-app-example\\src\\reportWebVitals.js":"1","C:\\Mahyar\\LUT_Software_Engineering_MSc\\Courses_Autumn_2020\\Geographic_Information_Systems\\WebGIS\\geo-app-example\\src\\App.js":"2","C:\\Mahyar\\LUT_Software_Engineering_MSc\\Courses_Autumn_2020\\Geographic_Information_Systems\\WebGIS\\geo-app-example\\src\\index.js":"3","C:\\Mahyar\\LUT_Software_Engineering_MSc\\Courses_Autumn_2020\\Geographic_Information_Systems\\WebGIS\\geo-app-example\\src\\control-panel.js":"4","C:\\Mahyar\\LUT_Software_Engineering_MSc\\Courses_Autumn_2020\\Geographic_Information_Systems\\WebGIS\\geo-app-example\\src\\style.js":"5"},{"size":362,"mtime":1607358412959,"results":"6","hashOfConfig":"7"},{"size":4139,"mtime":1609616574385,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1607358412959,"results":"9","hashOfConfig":"7"},{"size":758,"mtime":1609605376115,"results":"10","hashOfConfig":"7"},{"size":1154,"mtime":1609605333497,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1szn4lz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Mahyar\\LUT_Software_Engineering_MSc\\Courses_Autumn_2020\\Geographic_Information_Systems\\WebGIS\\geo-app-example\\src\\reportWebVitals.js",[],["25","26"],"C:\\Mahyar\\LUT_Software_Engineering_MSc\\Courses_Autumn_2020\\Geographic_Information_Systems\\WebGIS\\geo-app-example\\src\\App.js",["27","28","29","30","31","32","33","34"],"/* global document */\nimport * as React from 'react';\nimport {useState, useEffect, useRef} from 'react';\nimport InteractiveMap, { Marker } from 'react-map-gl';\nimport { Editor, DrawPolygonMode, EditingMode } from 'react-map-gl-draw';\n\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoibWFoeWFhciIsImEiOiJja2lhOTBnbm4wbjBsMnNsYm16dGl6dmNjIn0.gY-LraqL_m5wYmfC_Hwr1g'; // Set your mapbox token here\n\nfunction App() {\n\n  const [viewport, setViewport] = useState({\n    latitude: 60.185686975969844,\n    longitude: 24.938107788227025,\n    zoom: 14,\n    bearing: 0,\n    pitch: 0\n  });\n\n  const _editorRef = useRef()\n\n  const [mode, modeHandler] = useState(null)\n\n  const [markers, setMarkers] = React.useState([])\n  const [polygonPoints, setPolygonPoints] = React.useState([])\n  const [isPolygon, setIsPolygon] = React.useState(false)\n\n  const handleClick = ({lngLat: [longitude, latitude]}) =>\n    {\n      if (!isPolygon) {\n        setMarkers(markers => [...markers, { longitude, latitude }])\n      } else {\n        setPolygonPoints(polygonPoints => [...polygonPoints, { longitude, latitude }])\n      }\n    }\n\n  const handleMarkerRemove = (i) => {\n    {\n      if (!isPolygon) {\n        setMarkers(markers.filter(item => item.longitude !== markers[i].longitude))\n      }\n    }\n  }\n\n  const handlePolygonButton = () => {\n    setIsPolygon(isPolygon => !isPolygon)\n  }\n\n  useEffect(() => {\n    console.log(isPolygon)\n  }, [isPolygon])\n\n  const [selectedFeatureIndex, setSelectedFeatureIndex] = useState(null)\n\n  const _onSelect = options => {\n    setSelectedFeatureIndex({selectedFeatureIndex: options && options.selectedFeatureIndex});\n  };\n\n  const _onDelete = () => {\n    const selectedIndex = selectedFeatureIndex;\n    if (selectedIndex !== null && selectedIndex >= 0) {\n      _editorRef.deleteFeatures(selectedIndex);\n    }\n  };\n\n  const _onUpdate = ({editType}) => {\n    if (editType === 'addFeature') {\n      this.setState({\n        mode: new EditingMode()\n      });\n    }\n  };\n\n  return (\n    <>\n      <button\n        onClick={() => handlePolygonButton()}\n        style={{ position: 'absolute',\n                 top: 20,\n                 left: 20,\n                 height: 40,\n                 width: 80,\n                 borderRadius: 5,\n                 zIndex: 1,\n                 color: 'white',\n                 backgroundColor: isPolygon ? 'green' : 'red' }}>\n          Polygon\n      </button>\n      <InteractiveMap\n        {...viewport}\n        onClick={handleClick}\n        width=\"100vw\"\n        height=\"100vh\"\n        mapStyle=\"mapbox://sprites/mapbox/streets-v8\"\n        onViewportChange={nextViewport => setViewport(nextViewport)}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n      >\n        {markers.length\n          ? markers.map((m, i) => (\n              // <Marker /> just places its children at the right lat lng.\n              <Marker {...m} key={i}>\n                <img\n                  onClick={() => handleMarkerRemove(i)}\n                  src={\"./logo192.png\"}\n                  style={{ width: 50, height: 50, zIndex: 1 }} />\n              </Marker>\n            ))\n          : null\n        }\n        {\n          isPolygon ?\n            <>\n                <button\n                  onClick={() => handlePolygonButton()}\n                  style={{ position: 'absolute',\n                          top: 80,\n                          left: 20,\n                          height: 40,\n                          width: 80,\n                          borderRadius: 5,\n                          zIndex: 1,\n                          color: 'white',\n                          backgroundColor: 'gray' }}>\n                    Delete Polygon\n              </button>\n              <Editor\n                // to make the lines/vertices easier to interact with\n                ref={_editorRef}\n                clickRadius={12}\n                mode={new DrawPolygonMode()}\n                onSelect={() => _onSelect}\n                // onUpdate={_onUpdate}\n              />\n            </>\n          :\n            null\n        }\n       {/* {_renderToolbar()} */}\n      </InteractiveMap>\n    </>\n  );\n}\n\ndocument.body.style.margin = 0;\n\nexport default App;\n","C:\\Mahyar\\LUT_Software_Engineering_MSc\\Courses_Autumn_2020\\Geographic_Information_Systems\\WebGIS\\geo-app-example\\src\\index.js",[],"C:\\Mahyar\\LUT_Software_Engineering_MSc\\Courses_Autumn_2020\\Geographic_Information_Systems\\WebGIS\\geo-app-example\\src\\control-panel.js",[],["35","36"],"C:\\Mahyar\\LUT_Software_Engineering_MSc\\Courses_Autumn_2020\\Geographic_Information_Systems\\WebGIS\\geo-app-example\\src\\style.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":11,"nodeType":"43","messageId":"44","endLine":1,"endColumn":19},{"ruleId":"45","severity":1,"message":"46","line":21,"column":10,"nodeType":"47","messageId":"48","endLine":21,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":21,"column":16,"nodeType":"47","messageId":"48","endLine":21,"endColumn":27},{"ruleId":"45","severity":1,"message":"50","line":24,"column":10,"nodeType":"47","messageId":"48","endLine":24,"endColumn":23},{"ruleId":"51","severity":1,"message":"52","line":37,"column":5,"nodeType":"53","messageId":"54","endLine":41,"endColumn":6},{"ruleId":"45","severity":1,"message":"55","line":58,"column":9,"nodeType":"47","messageId":"48","endLine":58,"endColumn":18},{"ruleId":"45","severity":1,"message":"56","line":65,"column":9,"nodeType":"47","messageId":"48","endLine":65,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":101,"column":17,"nodeType":"59","endLine":104,"endColumn":66},{"ruleId":"37","replacedBy":"60"},{"ruleId":"39","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-redeclare","'document' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","no-unused-vars","'mode' is assigned a value but never used.","Identifier","unusedVar","'modeHandler' is assigned a value but never used.","'polygonPoints' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'_onDelete' is assigned a value but never used.","'_onUpdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["62"],["63"],"no-global-assign","no-unsafe-negation"]